name: Run DanexLang Example

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run-example:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache ANTLR runtime JAR
        uses: actions/cache@v3
        with:
          path: lib/antlr-4.9.2-complete.jar
          key: antlr-runtime-v4.9.2

      - name: Ensure ANTLR runtime JAR present
        run: |
          mkdir -p lib
          if [ ! -f lib/antlr-4.9.2-complete.jar ]; then
            curl -L -o lib/antlr-4.9.2-complete.jar https://www.antlr.org/download/antlr-4.9.2-complete.jar
          fi

      - name: Generate ANTLR Lexer & Parser sources
        run: |
          mkdir -p src/generated

          # Generate Lexer first and move its .tokens file to grammar/
          java -jar lib/antlr-4.9.2-complete.jar \
            -Dlanguage=Java \
            -package danex.antlr \
            -o src/generated \
            grammar/DanexLexer.g4
          
          # Now generate the Parser using the tokens file
          java -jar lib/antlr-4.9.2-complete.jar \
            -Dlanguage=Java \
            -package danex.antlr \
            -o src/generated \
            -lib grammar \
            grammar/DanexParser.g4

      - name: Compile all source files
        run: |
          mkdir -p bin
          echo "Compiling all Java files..."

          # Compile ANTLR-generated files first
          find src/generated -name "*.java" > gen-sources.txt
          javac -cp lib/antlr-4.9.2-complete.jar -d bin @gen-sources.txt

          # Then compile your own source files
          find src -name "*.java" > sources.txt
          javac -cp "lib/antlr-4.9.2-complete.jar:bin" -d bin @sources.txt

      - name: Run example
        run: |
          java -cp "bin:lib/antlr-4.9.2-complete.jar" Main example/Hello.danex
