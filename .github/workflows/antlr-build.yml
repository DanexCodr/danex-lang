name: Build ANTLR Parser

on:
  push:
    branches: [main]

permissions:
  contents: write  # Needed for git push, though not used here

jobs:
  build-antlr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create directories
        run: |
          mkdir -p lib src/generated bin

      - name: Download ANTLR jar
        run: |
          curl -L -o lib/antlr-4.9.2-complete.jar https://www.antlr.org/download/antlr-4.9.2-complete.jar

      - name: Generate ANTLR Lexer
        run: |
          # Generate lexer Java into src/generated; ANTLR writes DanexLexer.tokens to the current directory
          java -jar lib/antlr-4.9.2-complete.jar -Dlanguage=Java -o src/generated -package danex.antlr grammar/DanexLexer.g4

      - name: Copy tokens to grammar directory and clean up
        run: |
          # ANTLR placed DanexLexer.tokens in root; copy it so parser can find it via -lib grammar
          cp DanexLexer.tokens grammar/DanexLexer.tokens
          rm DanexLexer.tokens

      - name: Generate ANTLR Parser
        run: |
          # Use -lib grammar so ANTLR picks up the copied DanexLexer.tokens in grammar/
          java -jar lib/antlr-4.9.2-complete.jar -Dlanguage=Java -o src/generated -package danex.antlr -lib grammar grammar/DanexParser.g4

      - name: Compile ANTLR-generated Java files
        run: |
          javac -cp lib/antlr-4.9.2-complete.jar -d bin src/generated/*.java

      - name: Package to JAR (optional)
        run: |
          jar cf danex-parser.jar -C bin .
          mkdir -p dist
          mv danex-parser.jar dist/

      - name: Upload JAR as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: danex-parser
          path: dist/danex-parser.jar
